@mixin respond-down($width) {
    @media only screen and (max-width: $width) { @content }
};
@mixin respond-up($width) {
    @media only screen and (min-width: $width) {@content}
};


@mixin respond($breakpoint) {
    @media only screen and (max-width: map-get($breakpoints, $breakpoint)){@content}
};


@mixin clear {
    &::after {
        content: '';
        display: block;
        clear: both;
    }
};



@mixin link {
    &:link,
    &:visited {
        @content
    }
};

@mixin absolute-fill-ct {
    position: absolute; 
    top: 0; bottom: 0; right: 0; left: 0;
    margin: auto;
};

@mixin btn-base($shadow-border:true,$b-radius-level:0,$f-size-level:1,$p-tb:1.2rem,$p-rl:1.8rem) {
    &:link,
    &:visited {
        display: inline-block;
        text-decoration: none;
        color: #000;
        font-size: nth($font-size,$f-size-level);
        padding: $p-tb,$p-rl;
        @if $shadow-border {box-shadow: 0 0 0 1px #000;}
        @if $b-radius-level > 0 {border-radius: nth($border-radius , $b-radius-level);}
    }
};


@mixin grid-sys($col-nm,$col-gutter:3,$width:100) {
    margin-right: percentage($col-gutter / 100);
    width: percentage( (($width - $col-gutter * ($col-nm - 1)) / $col-nm) / $width);
    &:nth-child(#{$col-nm}n) { margin-right: 0; }
};

// @mixin table-sys($col-nm,$width) {
// };

@mixin  font($f-size-level:2,$lh:0px,$f-weight-level:1) {
    font-size: nth($font-size , $f-size-level);
    font-weight: nth($font-weight,$f-weight-level);
    line-height: nth($font-size , $f-size-level) + $lh;
}



// 比較大的 mixin 
// @mixin  big-mixin {
//     @extend %btn-base;
//     @include font($level);
// }