@mixin respond-down($width) {
    @media only screen and (max-width: $width) { @content }
};
@mixin respond-up($width) {
    @media only screen and (min-width: $width) {@content}
};


@mixin respond($breakpoint) {
    @media only screen and (max-width: map-get($breakpoints, $breakpoint)){@content}
};


@mixin clear {
    &::after {
        content: '';
        display: block;
        clear: both;
    }
};



@mixin link {
    &:link,
    &:visited {
        @content
    }
};

@mixin absolute-fill-ct {
    position: absolute; 
    top: 0; bottom: 0; right: 0; left: 0;
    margin: auto;
};

@mixin btn-base($shadow-border:true,$b-radius-level:0,$f-size-level:1,$p-tb:1.2rem,$p-rl:1.8rem) {
    &:link,
    &:visited {
        display: inline-block;
        text-decoration: none;
        color: #000;
        font-size: nth($font-size,$f-size-level);
        padding: $p-tb,$p-rl;
        @if $shadow-border {box-shadow: 0 0 0 1px #000;}
        @if $b-radius-level > 0 {border-radius: nth($border-radius , $b-radius-level);}
    }
};

// @mixin table-sys($col-nm,$width) {
// };

@mixin  font($f-size-level:2,$lh:0px,$f-weight-level:1) {
    font-size: nth($font-size , $f-size-level);
    font-weight: nth($font-weight,$f-weight-level);
    line-height: nth($font-size , $f-size-level) + $lh;
}

// margin % 數 grid-sys , 基礎版 , 只有兩邊對齊
@mixin grid-sys($col-nm,$col-gutter:3,$width:100) {
    margin-right: percentage($col-gutter / 100);
    width: percentage( (($width - $col-gutter * ($col-nm - 1)) / $col-nm) / $width);
    &:nth-child(#{$col-nm}n) { margin-right: 0; }
};

@mixin grid-sys-test($col-nm,$mode:between,$col-gutter:20px) {
    @if $mode == between {
        margin-right: $col-gutter;
        width: calc((100% - #{($col-nm - 1)} * #{$gutter}) / #{$col-nm});
        &:nth-child(#{$col-nm}n) { margin-right: 0;}
    };
    @if $mode == around {
        margin: 0 $col-gutter / 2;
        width: calc((100% - #{$col-nm} * #{$col-gutter}) / #{$col-nm});
    }
    @if $mode == even {
        margin-right: $col-gutter;
        width: calc((100% - #{($col-nm + 1)} * #{$col-gutter}) / #{$col-nm});
        &:first-child { margin-left: $col-gutter;}
    };
}



// 比較大的 mixin 
// @mixin  big-mixin {
//     @extend %btn-base;
//     @include font($level);
// }





$columns: 10;
$container: 1000px;
$gutter: 20px;
// $breakpoints:(
//     md:768px,
//     sm:480px
// );

// .container{
//     width: 1440px;
//     margin-right: auto;
//     margin-left: auto;
//     &:after{
//         content: "";
//         display: block;
//         clear: both;
//     }

    // @media screen and (max-width: map-get($breakpoints, md)){
    //     width: 980px;
    // }
    // @media screen and (max-width: map-get($breakpoints, sm)){
    //     width: 100%;
    // }
// }

// @for $col from 1 through $columns {
//     .col-#{$col}{
//         width: calc(#{100% / $columns * $col} - #{$gutter});
//         margin-left: $gutter / 2;
//         margin-right: $gutter / 2;
//         float: left;
//         background-color: rgba(#fff,.8);
//         height: 10px;
//     }
// }


// @each $key,$value in $breakpoints {
//     @media screen and (max-width: $value){
//         @for $col from 1 through $columns {
//             .#{$key}\:col-#{$col}{
//                 width: calc(#{100% / $columns * $col} - #{$gutter});
//                 margin-left: $gutter / 2;
//                 margin-right: $gutter / 2;
//                 float: left;
//                 background-color: rgba(#fff,.8);
//                 height: 10px;
//             }
//         }
//     }
// }